{% schema %}
{
  "name": "Product Hotspot Section",
  "settings": [
    {
      "type": "text",
      "id": "section-header",
      "label": "Section header",
      "default": "Featured Products"
    },
    {
      "type": "collection",
      "id": "collection",
      "label": "Select collection"
    }
  ],
  "blocks": [
    {
      "type": "hotspot",
      "name": "Hotspot Item",
      "settings": [
        {
          "type": "image_picker",
          "id": "product_image",
          "label": "Background Image"
        },
        {
          "type": "product",
          "id": "product_handle",
          "label": "Select Product"
        },
        {
          "type": "range",
          "id": "pos_top",
          "label": "Top Position (%)",
          "min": 0,
          "max": 100,
          "step": 1,
          "default": 20
        },
        {
          "type": "range",
          "id": "pos_left",
          "label": "Left Position (%)",
          "min": 0,
          "max": 100,
          "step": 1,
          "default": 20
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Product Hotspot Section"
    }
  ]
}
{% endschema %}

<div class="hotspot-section">
  <h2>{{ section.settings['section-header'] }}</h2>

  <div class="product-grid">
    {% for product in section.settings.collection.products %}
      <div class="product-card">
        <div class="product-image">
          <img
            src="{{ product.featured_image | img_url: '600x' }}"
            alt="{{ product.title }} "
            width="{{ product.featured_image.width }}"
            height="{{ product.featured_image.height }}"
          >
          <button
            class="plus-icon"
            data-product='
              {
                "id": {{ product.id }},
                "title": "{{ product.title | escape }}",
                "description": {{ product.description | strip_html | json }},
                "price": {{ product.price }},
                "featured_image": "{{ product.featured_image | img_url: "600x" }}",
                "variants": {{ product.variants | json }},
                "options": {{ product.options_with_values | json }}
              }
            '
          >
            +
          </button>
        </div>
        <p class="product-title">{{ product.title }}</p>
      </div>
    {% endfor %}
  </div>
</div>

<!-- Modal -->
<div id="hotspotModal" class="modal">
  <div class="modal-content">
    <span class="close-btn">&times;</span>
    <div id="modal-body"></div>
  </div>
</div>

<style>
  .hotspot-section {
    text-align: center;
    padding: 40px 20px;
  }
  .product-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    gap: 25px;
    margin-top: 30px;
  }
  .product-card {
    position: relative;
  }
  .product-image {
    position: relative;
  }
  .product-image img {
    width: 100%;
    border-radius: 8px;
  }
  .plus-icon {
    position: absolute;
    top: 15px;
    right: 15px;
    background: #000;
    color: #fff;
    border: none;
    border-radius: 50%;
    width: 32px;
    height: 32px;
    font-size: 20px;
    cursor: pointer;
    line-height: 32px;
    text-align: center;
  }
  .product-title {
    margin-top: 10px;
    font-size: 16px;
    font-weight: 600;
  }

  .modal {
    display: none;
    position: fixed;
    z-index: 9999;
    left: 0; top: 0;
    width: 100%; height: 100%;
    background-color: rgba(0,0,0,0.7);
  }
  .modal-content {
    background: #fff;
    margin: 5% auto;
    padding: 25px;
    border-radius: 8px;
    max-width: 500px;
    position: relative;
  }
  .close-btn {
    position: absolute;
    top: 12px;
    right: 18px;
    font-size: 26px;
    cursor: pointer;
  }
  .product-popup img {
    max-width: 100%;
    margin-bottom: 15px;
  }
  .product-popup h3 {
    font-size: 20px;
    margin-bottom: 10px;
  }
  .product-popup .price {
    font-weight: bold;
    margin-bottom: 10px;
  }
  .product-popup .description {
    font-size: 14px;
    color: #444;
    margin-bottom: 15px;
  }

  .color-options {
    display: flex;
    gap: 10px;
    margin-bottom: 15px;
  }
  .color-btn {
    padding: 6px 14px;
    border: 1px solid #000;
    background: #fff;
    cursor: pointer;
    border-radius: 4px;
  }
  .color-btn.active {
    background: #000;
    color: #fff;
  }

  .size-dropdown {
    width: 100%;
    padding: 6px;
    margin-bottom: 15px;
  }
  .add-to-cart {
    width: 100%;
    background: #000;
    color: #fff;
    border: none;
    padding: 12px;
    font-size: 14px;
    cursor: pointer;
    border-radius: 4px;
  }
  .add-to-cart-btn:hover {
    background: #333;
  }

  .product-card-details{
    display: flex;
  }
  .product-inner-details{
    display: inline-flex;
    flex-direction: column;
    padding-left: 20px;
    align-items: center;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const modal = document.getElementById('hotspotModal');
    const modalBody = document.getElementById('modal-body');
    const closeBtn = document.querySelector('.close-btn');

    document.querySelectorAll('.plus-icon').forEach((button) => {
      button.addEventListener('click', () => {
        const productData = JSON.parse(button.getAttribute('data-product'));

        let colorOptions = '';
        let sizeOptions = '';

        if (productData.options && productData.options.length > 0) {
          productData.options.forEach((opt, idx) => {
            if (opt.name.toLowerCase().includes('color')) {
              colorOptions = `
              <div class="color-options">
                ${opt.values
                  .map(
                    (val) => `
                  <button type="button" class="color-btn" data-option-index="${idx}" data-value="${val}">
                    ${val}
                  </button>
                `
                  )
                  .join('')}
              </div>
            `;
            }
            if (opt.name.toLowerCase().includes('size')) {
              sizeOptions = `
              <select name="option${idx + 1}" class="size-dropdown" required>
                <option value="">Choose your size</option>
                ${opt.values.map((val) => `<option value="${val}">${val}</option>`).join('')}
              </select>
            `;
            }
          });
        }

        const defaultVariantId = productData.variants[0].id;

        modalBody.innerHTML = `
        <div class="product-popup">
          <img src="${productData.featured_image}" alt="${productData.title}">
          <h3>${productData.title}</h3>
          <p class="price">${(productData.price / 100).toFixed(2)} {{ shop.currency }}</p>
          <p class="description">${productData.description}</p>

          <form method="post" action="/cart/add" id="popupCartForm">
            <input type="hidden" name="id" value="${defaultVariantId}" id="variantIdInput">

            ${colorOptions ? `<label>Color</label>${colorOptions}` : ''}
            ${sizeOptions ? `<label>Size</label>${sizeOptions}` : ''}

            <button type="submit" class="add-to-cart">ADD TO CART â†’</button>
          </form>
        </div>
      `;

        modal.style.display = 'block';

        // handle color selection
        document.querySelectorAll('.color-btn').forEach((btn) => {
          btn.addEventListener('click', (e) => {
            e.preventDefault();
            document.querySelectorAll('.color-btn').forEach((b) => b.classList.remove('active'));
            btn.classList.add('active');
          });
        });
      });
    });

    closeBtn.onclick = () => (modal.style.display = 'none');
    window.onclick = (e) => {
      if (e.target == modal) modal.style.display = 'none';
    };
  });
</script>
